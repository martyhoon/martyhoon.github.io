I"Z<h3 id="-euclidean-algorithm">🔶 Euclidean Algorithm</h3>

<p>위 알고리즘은 기존의 최대공약수를 구하는 방식인 소인수분해를 통해 공통인수를 구하고 그 중 가장 높은 수를 구하는 방식을 사용했다. 이번에는 이러한 복잡한 과정없이 최대공약수를 구하는 유클리드 알고리즘을 알아보겠다. 이를 활용하면 훨씬 효율적으로 최대공약수를 구할 수 있다.
<br /><br />
유클리드 알고리즘의 기본정의는 아래와 같다.</p>

<ul>
  <li>Fact 1 : gcd(a, 0) = a</li>
  <li>Fact 2 : gcd(a,b) = gcd(b,r)일 때 r은 a를 b로 나눈 나머지이다.</li>
</ul>

<div class="language-js highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">function</span> <span class="nx">gcd</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span>
  
  <span class="kd">let</span> <span class="nx">r1</span> <span class="o">=</span> <span class="nx">a</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">r2</span> <span class="o">=</span> <span class="nx">b</span><span class="p">;</span>
  <span class="kd">let</span> <span class="nx">r</span><span class="p">,</span><span class="nx">q</span><span class="p">;</span>
  
  <span class="k">while</span><span class="p">(</span><span class="nx">r2</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">){</span>
  
  <span class="nx">q</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">r1</span><span class="o">/</span><span class="nx">r2</span><span class="p">);</span>

  <span class="nx">r</span> <span class="o">=</span> <span class="nx">r1</span><span class="o">-</span> <span class="nx">q</span><span class="o">*</span> <span class="nx">r2</span><span class="p">;</span>
  <span class="nx">r1</span> <span class="o">=</span> <span class="nx">r2</span><span class="p">;</span> 
  <span class="nx">r2</span> <span class="o">=</span> <span class="nx">r</span><span class="p">;</span>  
    
  <span class="p">}</span>
  
  <span class="k">return</span> <span class="nx">r1</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<h3 id="-extended-euclidean-algorithm">🔶 Extended Euclidean Algorithm</h3>

<p>2개의 정수 a,b가 존재할 시, 아래의 식을 만족하는 정수 s와 t를 찾을 수 있다. <br /><br /></p>

<p style="font-size: 20px; text-align : center; font-weight : bold;">s*a + t*b = gcd(a,b) </p>
<p><br /><br /></p>

<p>예제) a= 161 이고  b =28 일 때 gcd(a,b)와 s, t를 구하시오</p>

<table class="mbtablestyle">
  <thead>
    <tr>
      <th style="text-align: center">q</th>
      <th style="text-align: center">r1   r2</th>
      <th style="text-align: center">r</th>
      <th style="text-align: center">s1   s2</th>
      <th style="text-align: center">s</th>
      <th style="text-align: center">t1   t2</th>
      <th style="text-align: center">t</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">5</td>
      <td style="text-align: center">161     28</td>
      <td style="text-align: center">21</td>
      <td style="text-align: center">1     0</td>
      <td style="text-align: center">1</td>
      <td style="text-align: center">0     1</td>
      <td style="text-align: center">-5</td>
    </tr>
    <tr>
      <td style="text-align: center">1</td>
      <td style="text-align: center">28   21</td>
      <td style="text-align: center">7</td>
      <td style="text-align: center">0     1</td>
      <td style="text-align: center">-1</td>
      <td style="text-align: center">1     -5</td>
      <td style="text-align: center">6</td>
    </tr>
    <tr>
      <td style="text-align: center">3</td>
      <td style="text-align: center">21   7</td>
      <td style="text-align: center">0</td>
      <td style="text-align: center">1     -1</td>
      <td style="text-align: center">4</td>
      <td style="text-align: center">-5     6</td>
      <td style="text-align: center">-23</td>
    </tr>
    <tr>
      <td style="text-align: center"> </td>
      <td style="text-align: center"><strong>7</strong>   0</td>
      <td style="text-align: center"> </td>
      <td style="text-align: center"><strong>-1</strong>   4</td>
      <td style="text-align: center"> </td>
      <td style="text-align: center"><strong>6</strong>   -23</td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>
<p><br />
gcd(a,b) = 7, s = -1 t= 6 이 된다. (초기 s1 s2 : 1 0 , t1 t2 : 0 1)</p>

<p><br /><br /></p>

<p>이러한 확장 유클리드 알고리즘을 사용하여 <code class="language-plaintext highlighter-rouge">Linear Diophantine Equation(부정방정식)</code>풀 수 있다. 부정방정식 기본 type은 <code class="language-plaintext highlighter-rouge">ax + by =c</code> 이고 a,b,c는 주어지고 x,y를 구하는 갓이다. <br />
d = gcd(a,b)라 할 때</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">c%d != 0</code> 이면 해가 없고</li>
  <li><code class="language-plaintext highlighter-rouge">c%d == 0</code> 이면 해가 무수히 많다.</li>
</ul>

<p>ax + by = c를 d로 나눈다. a’x + b’y = c’ 이 때 a’, b’는 서로소 이기 때문에 최대공약수는 1이 된다. 그럼 위의 식을 이용하면 a’s+ b’t = 1이 된다. 위를 통해 s,t를 구하고</p>

<ul>
  <li>a’x + b’y = c’</li>
  <li>a’s+ b’t = 1</li>
</ul>

<p>를 풀면 <code class="language-plaintext highlighter-rouge">x0 = (c/d)s, y0 = (c/d)t</code> 란 특수해가 하나 구해진다. 이를 통해 일반해를 구하면 아래의 결과가 나온다. (k는 정수)</p>

<ul>
  <li>x = x0 + k(b/d)</li>
  <li>y = y0 - k(a/d)</li>
</ul>

<bt>

### &#128310; 관련 문제

* [백준 알고리즘 - 캔디 분배](https://www.acmicpc.net/problem/3955)
* [백준 알고리즘 - 역원 구하기](https://www.acmicpc.net/problem/14565)
* [백준 알고리즘 - 피보나치 문제해결전략](https://www.acmicpc.net/problem/10327)



</bt>
:ET